// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Temp/Proto/Table_ItemShow.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Temp/Proto/Table_ItemShow.proto</summary>
public static partial class TableItemShowReflection {

  #region Descriptor
  /// <summary>File descriptor for Temp/Proto/Table_ItemShow.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static TableItemShowReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ch9UZW1wL1Byb3RvL1RhYmxlX0l0ZW1TaG93LnByb3RvImwKDFJvd19JdGVt",
          "U2hvdxIKCgJpZBgBIAEoBRIPCgdxdWFsaXR5GAIgASgFEgwKBGljb24YAyAB",
          "KAkSEAoIZWZmZWN0SWQYBCABKAUSCwoDdGFnGAUgASgFEhIKCmFtb3VudFRl",
          "eHQYBiABKAUiLgoOVGFibGVfSXRlbVNob3cSHAoFZGF0YXMYASADKAsyDS5S",
          "b3dfSXRlbVNob3c="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Row_ItemShow), global::Row_ItemShow.Parser, new[]{ "Id", "Quality", "Icon", "EffectId", "Tag", "AmountText" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Table_ItemShow), global::Table_ItemShow.Parser, new[]{ "Datas" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Row_ItemShow : pb::IMessage<Row_ItemShow>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Row_ItemShow> _parser = new pb::MessageParser<Row_ItemShow>(() => new Row_ItemShow());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Row_ItemShow> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TableItemShowReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Row_ItemShow() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Row_ItemShow(Row_ItemShow other) : this() {
    _hasBits0 = other._hasBits0;
    id_ = other.id_;
    quality_ = other.quality_;
    icon_ = other.icon_;
    effectId_ = other.effectId_;
    tag_ = other.tag_;
    amountText_ = other.amountText_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Row_ItemShow Clone() {
    return new Row_ItemShow(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private readonly static int IdDefaultValue = 0;

  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Id {
    get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      id_ = value;
    }
  }
  /// <summary>Gets whether the "id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "quality" field.</summary>
  public const int QualityFieldNumber = 2;
  private readonly static int QualityDefaultValue = 0;

  private int quality_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Quality {
    get { if ((_hasBits0 & 2) != 0) { return quality_; } else { return QualityDefaultValue; } }
    set {
      _hasBits0 |= 2;
      quality_ = value;
    }
  }
  /// <summary>Gets whether the "quality" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQuality {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "quality" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQuality() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "icon" field.</summary>
  public const int IconFieldNumber = 3;
  private readonly static string IconDefaultValue = "";

  private string icon_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Icon {
    get { return icon_ ?? IconDefaultValue; }
    set {
      icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "icon" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIcon {
    get { return icon_ != null; }
  }
  /// <summary>Clears the value of the "icon" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIcon() {
    icon_ = null;
  }

  /// <summary>Field number for the "effectId" field.</summary>
  public const int EffectIdFieldNumber = 4;
  private readonly static int EffectIdDefaultValue = 0;

  private int effectId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EffectId {
    get { if ((_hasBits0 & 4) != 0) { return effectId_; } else { return EffectIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      effectId_ = value;
    }
  }
  /// <summary>Gets whether the "effectId" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEffectId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "effectId" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEffectId() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "tag" field.</summary>
  public const int TagFieldNumber = 5;
  private readonly static int TagDefaultValue = 0;

  private int tag_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Tag {
    get { if ((_hasBits0 & 8) != 0) { return tag_; } else { return TagDefaultValue; } }
    set {
      _hasBits0 |= 8;
      tag_ = value;
    }
  }
  /// <summary>Gets whether the "tag" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTag {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "tag" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTag() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "amountText" field.</summary>
  public const int AmountTextFieldNumber = 6;
  private readonly static int AmountTextDefaultValue = 0;

  private int amountText_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int AmountText {
    get { if ((_hasBits0 & 16) != 0) { return amountText_; } else { return AmountTextDefaultValue; } }
    set {
      _hasBits0 |= 16;
      amountText_ = value;
    }
  }
  /// <summary>Gets whether the "amountText" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAmountText {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "amountText" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAmountText() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Row_ItemShow);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Row_ItemShow other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Quality != other.Quality) return false;
    if (Icon != other.Icon) return false;
    if (EffectId != other.EffectId) return false;
    if (Tag != other.Tag) return false;
    if (AmountText != other.AmountText) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasId) hash ^= Id.GetHashCode();
    if (HasQuality) hash ^= Quality.GetHashCode();
    if (HasIcon) hash ^= Icon.GetHashCode();
    if (HasEffectId) hash ^= EffectId.GetHashCode();
    if (HasTag) hash ^= Tag.GetHashCode();
    if (HasAmountText) hash ^= AmountText.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasId) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (HasQuality) {
      output.WriteRawTag(16);
      output.WriteInt32(Quality);
    }
    if (HasIcon) {
      output.WriteRawTag(26);
      output.WriteString(Icon);
    }
    if (HasEffectId) {
      output.WriteRawTag(32);
      output.WriteInt32(EffectId);
    }
    if (HasTag) {
      output.WriteRawTag(40);
      output.WriteInt32(Tag);
    }
    if (HasAmountText) {
      output.WriteRawTag(48);
      output.WriteInt32(AmountText);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasId) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (HasQuality) {
      output.WriteRawTag(16);
      output.WriteInt32(Quality);
    }
    if (HasIcon) {
      output.WriteRawTag(26);
      output.WriteString(Icon);
    }
    if (HasEffectId) {
      output.WriteRawTag(32);
      output.WriteInt32(EffectId);
    }
    if (HasTag) {
      output.WriteRawTag(40);
      output.WriteInt32(Tag);
    }
    if (HasAmountText) {
      output.WriteRawTag(48);
      output.WriteInt32(AmountText);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (HasQuality) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quality);
    }
    if (HasIcon) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
    }
    if (HasEffectId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectId);
    }
    if (HasTag) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tag);
    }
    if (HasAmountText) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AmountText);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Row_ItemShow other) {
    if (other == null) {
      return;
    }
    if (other.HasId) {
      Id = other.Id;
    }
    if (other.HasQuality) {
      Quality = other.Quality;
    }
    if (other.HasIcon) {
      Icon = other.Icon;
    }
    if (other.HasEffectId) {
      EffectId = other.EffectId;
    }
    if (other.HasTag) {
      Tag = other.Tag;
    }
    if (other.HasAmountText) {
      AmountText = other.AmountText;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          Quality = input.ReadInt32();
          break;
        }
        case 26: {
          Icon = input.ReadString();
          break;
        }
        case 32: {
          EffectId = input.ReadInt32();
          break;
        }
        case 40: {
          Tag = input.ReadInt32();
          break;
        }
        case 48: {
          AmountText = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          Quality = input.ReadInt32();
          break;
        }
        case 26: {
          Icon = input.ReadString();
          break;
        }
        case 32: {
          EffectId = input.ReadInt32();
          break;
        }
        case 40: {
          Tag = input.ReadInt32();
          break;
        }
        case 48: {
          AmountText = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class Table_ItemShow : pb::IMessage<Table_ItemShow>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Table_ItemShow> _parser = new pb::MessageParser<Table_ItemShow>(() => new Table_ItemShow());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Table_ItemShow> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TableItemShowReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Table_ItemShow() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Table_ItemShow(Table_ItemShow other) : this() {
    datas_ = other.datas_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Table_ItemShow Clone() {
    return new Table_ItemShow(this);
  }

  /// <summary>Field number for the "datas" field.</summary>
  public const int DatasFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Row_ItemShow> _repeated_datas_codec
      = pb::FieldCodec.ForMessage(10, global::Row_ItemShow.Parser);
  private readonly pbc::RepeatedField<global::Row_ItemShow> datas_ = new pbc::RepeatedField<global::Row_ItemShow>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Row_ItemShow> Datas {
    get { return datas_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Table_ItemShow);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Table_ItemShow other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!datas_.Equals(other.datas_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= datas_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    datas_.WriteTo(output, _repeated_datas_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    datas_.WriteTo(ref output, _repeated_datas_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += datas_.CalculateSize(_repeated_datas_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Table_ItemShow other) {
    if (other == null) {
      return;
    }
    datas_.Add(other.datas_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          datas_.AddEntriesFrom(input, _repeated_datas_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          datas_.AddEntriesFrom(ref input, _repeated_datas_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
